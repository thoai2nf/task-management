services:
  # PHP Service
  app:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: task-management-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./backend:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - task-management
    depends_on:
      - db
      - redis

  # Nginx Service
  webserver:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    container_name: task-management-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./backend:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - task-management

  # MySQL Database
  db:
    image: mysql:8.0
    container_name: task-management-db
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: task_management
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: password
      MYSQL_USER: laravel
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - task-management

  # Redis Service
  redis:
    image: redis:7-alpine
    container_name: task-management-redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    networks:
      - task-management

  # Node.js for Vue Frontend
#  frontend:
#    image: node:20-alpine
#    container_name: task-management-frontend
#    restart: unless-stopped
#    working_dir: /app
#    ports:
#      - "5173:5173"
#    volumes:
#      - ./frontend:/app
#      - /app/node_modules
#    command: sh -c "npm install && npm run dev -- --host"
#    networks:
#      - task-management

networks:
  task-management:
    driver: bridge

volumes:
  dbdata:
    driver: local
